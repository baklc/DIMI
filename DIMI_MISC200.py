import gmpy2
from gmpy2 import *
from Cryptodome.Util.number import *
import binascii
import base64

############## 주어진 파이썬 코드 ##############

flag = b'DIMI{EXAMPLE_FLAG}'

p = getPrime(1024)
q = getPrime(1024)
n = p * q
phi = (p-1) * (q-1)
e = 3

#d = invert(e, phi)

print('N : ' + str(n))
print('e : ' + str(e))
print('flag : ' + str(pow(int(binascii.hexlify(flag).decode(),16), e, n)))

############## 주어진 실행 결과 코드 ##############

N : 15029683049431662587946024956772795186628441326451377886176214363764561250809140237091821720994512830484625140223778022946702000233375439170801303005516435366501892850422258284208074042741617969839160800246793045091729134339269315985316328784514977142930276487632712452033947938825779810151416045042302578030958313326443009914839244962135219611620882567878280435338403873129015476604582285801153948147590217717880832241590758490657586742543408598479260356356670659258484926867627600228988242788052873518867207685780829523518823806567717536811199573560542975313072001801266285692621280368568413344000401699414414622919
# <617> digits

e : 3

flag : 1020173981431580952999493373460366705604765137100917785846222101737696360699500649524596424495238691190122338410181946533544432269432044770071701434556076350104969383619486156399441715640034295894655872283596526740824501871576262308051060531085389881830419233249891396979359893450532569284026353909931666003516318985489337912942386039063953247929323481070450691252653458754503757146309759592343068582719132250338533937362735404220061439986727981942444921029902034974222614334760503918129113563190421955429
# <505> digits

############## RSA 암호 해독 코드(깔끔하게 정리한거) ##############

i = 1020173981431580952999493373460366705604765137100917785846222101737696360699500649524596424495238691190122338410181946533544432269432044770071701434556076350104969383619486156399441715640034295894655872283596526740824501871576262308051060531085389881830419233249891396979359893450532569284026353909931666003516318985489337912942386039063953247929323481070450691252653458754503757146309759592343068582719132250338533937362735404220061439986727981942444921029902034974222614334760503918129113563190421955429

m = gmpy2.iroot(i, 3)[0] # i 의 세제곱근 구하는 함수
# 낮은 지수 공격
# e 값이 매우 작고 n 값이 큰 경우 암호문의 세제곱근을 구하면 평문이 됨

perfectly = (hex(m)[2:]) #주어진 코드에서 int(S, 16)이 있길래 hex 값으로 바꿈(그냥 16 진수같아서 찍었더니 나옴

print("\n i : "+str(i)) # i 출력
print("m : "+str(m)) # i 세제곱근 출력
print("hex(m) : "+str(perfectly)) # i 세제곱근 hex 출력
print("binascii.unhexlify(hex(m) : "+str(binascii.unhexlify(perfectly))) #i 세제곱근 hex // binascii.unhexlify 출력
print("binascii.unhexlify(hex(m).decode : "+str(binascii.unhexlify(perfectly).decode())) #i 세제곱근 hex // binascii.unhexlify // decode출력

